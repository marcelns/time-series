# construindo a função para configuração do gráfico de dispersão
panel.smooth2 <- function(x, y, col = par("col"), bg = NA, pch = par("pch"),
cex = 1,  span = 2/3, iter = 3, ...)
{
points(x, y, pch = 19, col = "blue", bg = bg, cex = cex)
ok <- is.finite(x) & is.finite(y)
if (any(ok))
lines(stats::lowess(x[ok], y[ok], f = span, iter = iter),
col = "red", ...)
}
#função para produzir um resumo dos dados : média +- desvio padrão
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
###QUESTÕES###
#####1) Analise a relação das variáveis EngineSize, Fuel.tank.capacity, ################
#### Horsepower e Weight duas a duas. Use gráficos e/ou medidas estatísticas, #########
#### o que achar adequado, além de palavras para dar sua resposta. ####################
####Como são quatro variáveis quantitativas
#Eu decidi fazer:
#Além disso, também decidi fazer uma matriz de covariância
#uma matriz de dispersão com as informações de correlação
#e o histograma das variáveis
####Antes de começar a análise eu pesquisei o significado de cada variável:
#Enginesize é o tamanho do motor em litros (medida de volume)
#Weight é o peso do veículo
#Horsepower é uma medida de potência, quanto maior, mais "trabalho" o veículo pode fazer
#Fuel.tank.capacity é a capacidade em galões do tanque de combustível
###dados_q1 são somente os dados das variáveis da questão 1
dados_q1 <- subset.data.frame(dados.carros,
select = c(EngineSize,
Fuel.tank.capacity,
Horsepower, Weight))
####Comando para a matriz de covariância das variáveis
View(round(cov(dados_q1), digits = 2))
####Uma coisa interessante dessa matriz de covariância é de que
#todas as covariâncias são positivas
#isso indica que os valores acima da média de uma variável
#estão relacionados com valores acima da média de outra variável
#Assim, indica que um carro com uma potência acima da média
#provavelmente tem também o motor, o peso e o tamanho do tanque
#acima da média por exemplo
####Gerando uma matriz de com informações de correlação e histograma
pairs(dados_q1,
labels = c("Tamanho do Motor (l)",
"Capacidade do Tanque (gal)",
"Cavalos(hp)",
"Peso(Pounds)"),
upper.panel = panel.smooth2,
lower.panel = panel.cor,
diag.panel = panel.hist)
####várias informação importantes estão na matriz
#Uma delas é que a correlação das variáveis entre si é muito boa
#As correlações estão todas acima de 0.7
#Outra é que no geral os gráficos de dispersão se ajustam bem
#as linhas de tendência
####As variáveis peso e capacidade do tanque parecem ter o comportamento que mais parece linear,
#a sua correlaçao é alta 0.89 e seu gráfico de dispersão se ajusta bem
#o que faz sentido pois quanto mais combustível o carro carrega, maior o peso do veículo
####Todas as outras relações ensaiam alguma relação mas tem alguns pontos fora da curva
#algums mais e outras menos
####Peso e tamanho do motor também parecem ter uma relação linear
#apesar de existirem alguns pontos "fora da curva"
####já peso e horsepower ensaia alguma relação, principalmente entre os carros mais leves,
#mas ela tem de ser melhor estudada porque, por exemplo, entre os carros que pessam cerca
#de 4000 pounds a potência varia muito: entre ~100 e ~300 hp, ou seja, o peso não parece
#estar relacionado com a potência nos carros dessa massa
####A relação entre cavalos e capacidade do tanque parece logarítmica,
#apesar de alguns pontos distoantes
####Já cavalos e tamanho do motor não me parece que se ajustam muito bem
#apesar de motores pequenos parecerem estar relacionados com uma potência menor,
#Há muitos pontos distoantes, principalmente com carros com potência média e alta
####E por último a capacidade do tamque e o tamanho do motor tem o gráfico parecido
#com o anterior tem alguns tanques de capacidade média álta que distoam da tendência
#dos demais mas parece haver alguma relação
#####2) Analise a relação das variáveis DriveTrain e Horsepower. Use gráficos
# e/ou medidas estatísticas, o que achar adequado, além de palavras
# para dar sua resposta. Interprete os resultados.
####Sobre as variáveis
# DriveTrain é o tipo de tração do veículo, se dianteira, traseira ou 4x4
#Horsepower é uma medida de potência, quanto maior, mais "trabalho" o veículo pode fazer
####Como é uma variável qualitativa eu quantitativa
#Eu decidi comparar o gráfico de violino de acordo com as classes
#Eu fiz o mesmo com o boxplot
####Gráfico de Violino para as variáveis
(violino.q2 <- ggplot(dados.carros,
aes(x = DriveTrain,
y = Horsepower,
fill = DriveTrain)) +
geom_violin() +
labs(title = "Gráfico de Potência por tipos de Tração",
x = "Tipo de Tração",
y = "Potência (HP)") +
theme(legend.position = "none") +
stat_summary(fun = mean,
geom = "point",
shape = 19,
size = 2) +
stat_summary(fun.data = data_summary) +
coord_flip())
####Analisando o gráfico de violino
#É muito interessante a distribuição dos dados de acordo com as classes,
#A primeira informação é que os carros de tração traseira tem a média
#maior comparado aos outros tipos de tração
####Tabela com os valores da média
(tabela.media = tapply(dados.carros$Horsepower,
dados.carros$DriveTrain,
"mean")
)
#Há indícios de que o tipo de tração afeta a
#distribuição do número de cavalos
####Boxplot para as variáveis
(caixa.q2 <- ggplot(dados.carros,
aes(x = DriveTrain,
y = Horsepower,
fill = DriveTrain)) +
geom_boxplot()+
labs(title = "Caixas de Potência por tipos de Tração",
x = "Tipo de Tração",
y = "Potência (HP)") +
theme(legend.position = "none")
)
####Analisando o boxplot
#Confirmando a conclusão do gráfico anterior
#A mediana da tração traseira também é muito maior quando comparada
#os outros tipos de tração
#Além disso, vemos que a tração 4x4 e a dianteira tem um outlier cada
####Tabela com sumário de informações
(tabela.media = tapply(dados.carros$Horsepower,
dados.carros$DriveTrain,
"mean")
)
#####3) Analise a relação das variáveis AirBags e DriveTrain. Use gráficos
# e/ou medidas estatísticas, o que achar adequado, além de palavras
# para dar sua resposta. Interprete os resultados.
####Como são duas variáveis qualitativas
#Eu escolhi fazer:
#a tabela de contingência das variáveis
#os gráficos de barra para comparar a distribuição
#o Gráfico de mosaico para comparar com uma distribuição de independência
#o cálculo do qui-quadrado de Pearson
####Sobre as variáveis
# DriveTrain é o tipo de tração do veículo, se dianteira, traseira ou 4x4
#Airbag é a presença do airbag no veículo, se para o motorista e o passageiro,
#somente o motorista ou se o veículo não possui airbag
####Começando pelas tabelas de contingência e gráficos de barra
####Distribuição dada a tração
####tab.train = tabela onde tração está na coluna e as proporções são calculadas
#a partir do seu total
tab.train <- table(dados.carros$AirBags,dados.carros$DriveTrain)
colnames(tab.train) <- c("4 por 4", "Dianteira", "Traseira")
rownames(tab.train) <- c("Passageiro e Motorista", "Somente Motorista","Nenhum")
print(
addmargins(prop.table(tab.train, 2), 1)*100,
digits = 2)
####Gráfico de barra com a distribuição de airbags à partir da tração
barplot(prop.table(tab.train,2)*100,
beside = T,
xlab = "Tração",
ylab = "Porcentagem",
legend.text = T)
####colocar cmentário sobre a distribuição condicional
#dado o tipo de tração, são diferentes as proporções de airbags
#por exemplo não há nenhum veículo 4X4 com airbags para o passageiro e
#o motorista, enquanto 16% dos veículos de tração dianteira tem
#Além disso a proporção de veículos com tração traseira sem airbags
#é muito baixo em relação aos outros tipos de tração,
#ou seja, se eu escolher um veículo de tração traseira entre esses carros
#é mais provável que eu pegue um veículo com pelo menos 1 airbag do que
#se eu tivesse escolhido entre os veículos 4X4 ou de tração dianteira
####Distribuição dados a quantidade de airbags
####tab airbag tabela onde o airbag está na coluna e o total da coluna é calculado
tab.airbag <- table(dados.carros$DriveTrain,dados.carros$AirBags)
colnames(tab.airbag) <- c("Passageiro e Motorista", "Somente Motorista","Nenhum")
rownames(tab.airbag) <- c("4 por 4", "Dianteira", "Traseira")
print(
addmargins(prop.table(tab.airbag,2), 1)*100,
digits = 2)
####Gráfico de barra com a distribuição de airbags à partir da tração
barplot(prop.table(tab.airbag,1)*100,
beside = T,
xlab = "Airbag",
ylab = "Porcentagem",
legend.text = T)
####Da mesma maneira que a análise anterior
#as distribuições condicionadas são diferente entre os veículos
#sem airbag, a maioria (80%) tem tração dianteira por exemplo
####Apesar das distribuições condicionais serem diferentes
#É interessante comparar com uma tabela supondo independência
#para verificar se existe uma relação causal bilateral entre as variáveis
####Construindo tabela supondo independência das variáveis e gráfico de mosaico
#Vou construir os dois à partir da tabela em que a tração é a
#variável da linha e o airbag da coluna: a tab.train
#auxiliares para cálculo de coeficiente de contingencia questão 4
nlinhas.q4 = 3
ncolunas.q4 = 3
n.q4 = 93
####tab.train.marg = a tabela da tração na coluna com as margens
tab.train.marg <- addmargins(tab.train,
margin = 1:2)
####tab.train.ind = tabela de frequências supondo independência
tab.train.ind <-tab.train.marg[1:nlinhas.q4,ncolunas.q4+1] %*%
t(tab.train.marg[nlinhas.q4+1,1:ncolunas.q4]) / n.q4
rownames(tab.train.ind) = rownames(tab.train)
colnames(tab.train.ind) = colnames(tab.train)
####Comparando as duas tabelas
print(tab.train.ind, digits = 2)
print(tab.train)
####Dá para notar que a distribuição das duas tabelas é um pouco diferente
#mas a discrepância não é muito alta, por exemplo, a maior diferença
#de algum dos valores das duas tabelas é no dos veículos de tração
#dianteira sem airbag, que é 4
#Para complementar a análise é interessante fazer Mosaico
#e calcular o Qui-quadrado
####Gráfico de mosaicos
par(mfrow = c(1,2))
mosaicplot(tab.train,
main = "Dados Observados",
ylab = "Tração",
xlab = "Airbag",
col = "white")
mosaicplot(tab.train.ind,
main = "Sob Independência",
ylab = "Tração",
xlab = "Airbag",
col = "white")
####Como observado comparando as tebelas
#é difícil dizer se as distribuições são totalmente diferentes
#elas tem algum grau de diferença mas a discrepancia não é enorme
#Coeficiente de Qui-Quadrado de Pearson
#X2 = Coeficiente calculado dos dados
(X2 = sum( (tab.train - tab.train.ind)^2 / tab.train.ind ))
#Valor do quantil
(quantil.q4 = qchisq(0.95, nlinhas.q4-1,ncolunas.q4-1))
####O qui das variáveis observadas é menor que o do quantil
#portanto não dá para dizer que a distribuição dos dados observados
#é estatísticamente diferente da distribuição sob independência
#ao que tudo indica, junto com a análise dos gráficos e
#das tabelas, não é possível dizer que há relação causal bilateral
#entre o carro possuir ou não airbag e o seu tipo de tração
####4) Analise o comportamento da variável tipo do carro (Type) dado
# o tipo de direção (Man.trans.avail). Use gráficos
# e/ou medidas estatísticas, o que achar adequado, além de palavras
# para dar sua resposta. Interprete os resultados.
####Sobre as variáveis
#Man.trans.avail é se há transmissão manual disponível, no indica que a transmissão é automática
#Type é o tipo de carro, se esportivo, van, sedan, pequeno, etc
####tab.manual = tabela onde a disponibilidade de câmbio mnanual está na coluna
#e as proporções nos tipos de carro são calculadas a partir do seu total
tab.manual <- table(dados.carros$Type,dados.carros$Man.trans.avail)
colnames(tab.manual) <- c("Sem Câmbio Manual", "Com Câmbio Manual")
rownames(tab.manual) <- c("Compacto", "Grande","Médio","Pequeno", "Esportivo", "Furgão")
print(
addmargins(prop.table(tab.manual, 2), 1)*100,
digits = 2)
####Gráfico de barras
barplot(prop.table(tab.manual,2)*100,
beside = T,
xlab = "Câmbio",
ylab = "Porcentagem",
legend.text = T)
####Olhando o gráfico de barras e a tabela vemos que as distribuições condicionais
#são diferentes
#Por emxelpo, dado veículos sem câmbio manual, nenhum deles vai ser pequeno ou esportivo
#enquanto 23% dos com câmbio manual são esportivos
#além disso, nenhum carro grande tem cambio manual, enquanto 35% carros sem câmbio manual
#são carros grandes
####Em suma
#As distribuições condicionais são bem diferentes, a categoria de sem câmbio manual
#tem uma predominância de carros grandes e médios, enquanto a com câmbio manual
#tem uma predominância de carros compactos, pequenos e esportivos
#essa diferêncça de distribuição pode indicar uma relação causal unilateral
dispersao.q5 <- ggplot(dados.carros,
aes(x = Horsepower,
y = Weight)) +
geom_point() +
xlab("Potência (HP)") +
ylab("Peso (Pounds)")
dispersao.q5 <- ggplot(dados.carros,
aes(x = Horsepower,
y = Weight)) +
geom_point()
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Horsepower,
y = Weight)) +
geom_point())
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point())
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point() +
labels(title("a")))
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point() +
labels(title = "a")
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point() +
labels(title = "a"))
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point() +
labels(title = "a"))
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point() +
labels(title = "asdjkasdnnja"))
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point() +
labels(title = "Dispersão para Carros",
x = "Peso (Pounds)",
y = "Potência (HP)"))
dispersao.q5
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point())
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point(aes(colour = DriveTrain)))
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point(aes(colour = DriveTrain)) +
labels(size = "Passangers")
)
attach(dados.carros)
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point(aes(colour = DriveTrain)) +
labels(size = "Passangers")
)
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point(aes(colour = DriveTrain)) +
labs(size = "Passangers")
)
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point(aes(colour = DriveTrain, size = Passangers)) +
labs(size = "Passangers")
)
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point(aes(colour = DriveTrain, size = Passangers)) +
labs(size = "Passangers")
)
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point(aes(colour = DriveTrain, size = Width))
)
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
geom_point(aes(colour = DriveTrain, size = Passengers))
)
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point(aes(colour = DriveTrain, size = Passengers, shape = Man.trans.avail))
)
(dispersao.q5 <- ggplot(dados.carros,
aes(x = Weight,
y = Horsepower)) +
geom_point(aes(colour = Man.trans.avail, size = Passengers, shape = DriveTrain))
)
rm(list = ls())
pexp(74,1/63)
1-pexp(74,1/63)
round(a,4)
a = 1-pexp(74,1/63)
round(a,4)
a = pexp(20,1/63)
round(a,4)
a = qexp(0.75,1/63)
round(a,4)
round(a,2)
psuperior = pnorm(inferior,0.864,0.012)
psuperior
superior = 0.684+0.015
inferior = 0.684+0.015
psuperior = pnorm(inferior,0.864,0.012)
psuperior
psuperior + pinferior
pinferior = 1 - pnorm(superior,0.864,0.012)
psuperior + pinferior
psuperior = pnorm(inferior,0.864,0.012)
pinferior = 1 - pnorm(superior,0.864,0.012)
psuperior + pinferior
superior = 0.684+0.015
inferior = 0.684-0.015
psuperior = pnorm(inferior,0.864,0.012)
pinferior = 1 - pnorm(superior,0.864,0.012)
psuperior + pinferior
psuperior = 1 - pnorm(superior,0.864,0.012)
superior = 0.684+0.015
inferior = 0.684-0.015
pinferior = pnorm(inferior,0.864,0.012)
psuperior = 1 - pnorm(superior,0.864,0.012)
psuperior + pinferior
pinferior = pnorm(inferior,0.864,0.012)
psuperior = 1 - pnorm(superior,0.864,0.012)
psuperior + pinferior
round(psuperior + pinferior,2)
superior = 0.684+0.015
inferior = 0.684-0.015
pinferior = pnorm(inferior,0.864,0.012)
psuperior = 1 - pnorm(superior,0.864,0.012)
round(psuperior + pinferior,2)
superior = 0.684+0.015
inferior = 0.684-0.015
pinferior = pnorm(inferior,0.684,0.012)
psuperior = 1 - pnorm(superior,0.684,0.012)
round(psuperior + pinferior,2)
round(psuperior + pinferior,4)
superior = 0.684+0.015
inferior = 0.684-0.015
pinferior = pnorm(inferior,0.684,0.012)
psuperior = 1 - pnorm(superior,0.684,0.012)
round(psuperior + pinferior,4)
k = 0.684*38
round(k,2)
var = (10^2)/2
round(var,2)
var = (10^2)/12
round(var,2)
punif(8,2,12)
punif(7,2,12)
punif(8,2,12)
pelomenos9 = 1-punif(9,2,12)
pelomenos4 = 1-punif(4,2,12)
pelomenos9/pelomenos4
round(pelomenos9/pelomenos4,2)
load("C:/Users/Marcelo/Desktop/RussianTrollNetwork-master/trolls.Rdata")
y <- c(60, 52, 68, 53, 65, 57, 58, 62, 65, 53)
X
y <- c(60, 52, 68, 53, 65, 57, 58, 62, 65, 53)
x <- c(78, 65, 86, 68, 83, 68, 75, 80, 82, 66)
y <- c(60, 52, 68, 53, 65, 57, 58, 62, 65, 53)
x
require(R2OpenBUGS)
source('C:/Users/Marcelo/Desktop/ATVD2REGRESSAO.R')
install.packages(readr)
install.packages('readr')
source('C:/Users/Marcelo/Desktop/ATVD2REGRESSAO.R')
source('~/.active-rstudio-document', encoding = 'UTF-8')
matrix(c(1,8,275), 1,3)
rm(list = ls())
y <- ts(c(123,39,78,52,110), start = 2012)
plot(y)
autoplot(a10) +
ggtitle("Antidiabetic drug sales") +
ylab("$ million") +
xlab("Year")
getwd()
setwd('C:/Users/Marcelo/Desktop')
getwd()
setwd('C:/Users/Marcelo/Desktop/time-series')
getwd()
setwd('C:/Users/Marcelo/Desktop/time-series/exercises')
getwd()
setwd('C:/Users/Marcelo/Desktop/time-series/exercises/data')
getwd()
load(file = "a10.rda")
view(a10)
show(a10)
View(a10)
library("ggplot2")
View(a10)
ggseasonplot(a10)
ggseasonplot(a10)
ggseasonplot(a10, year.labels = True)
help(ggplot2)
library("ggplot2")
ggseasonplot(a10, year.labels = True)
library("fpp2")
install.packages("fpp2")
library("fpp2")
library("fpp2")
ggseasonplot(a10, year.labels = True)
ggseasonplot(a10, year.labels = true)
ggseasonplot(a10, year.labels = T)
ggsubseriesplot(a10) +
ylab("$ million") +
ggtitle("Seasonal subseries plot: antidiabetic drug sales")
autoplot(elecdemand[,c("Demand","Temperature")], facets=TRUE) +
xlab("Year: 2014") + ylab("") +
ggtitle("Half-hourly electricity demand: Victoria, Australia")
qplot(Temperature, Demand, data=as.data.frame(elecdemand)) +
ylab("Demand (GW)") + xlab("Temperature (Celsius)")
rm(list = ls())
autoplot(uschange[,c("Consumption","Income")]) +
ylab("% change") + xlab("Year")
View(uschange)
